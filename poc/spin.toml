spin_version = "1"
authors = ["ilcors-dev <corsetti.luca28@gmail.com>"]
description = "A simple chat application written in Rust using WASI"
name = "wasi-chat-poc"
trigger = { type = "http", base = "/" }
version = "0.1.0"

[variables]
db_user = { default = "bachelor" }
db_pswd = { default = "bachelor" }
db_host = { default = "127.0.0.1" }
db_name = { default = "wasi-chat" }
redis_host = { default = "127.0.0.1" }
redis_port = { default = "16785" }

[[component]]
id = "frontend-service"
# forked from https://github.com/fermyon/spin-fileserver and adapted to support react router as shown here https://www.fermyon.com/blog/building-a-social-app-with-spin-2
source = "api/frontend/build/frontend_service.wasm"
environment = { FALLBACK_PATH = "index.html" }
files = [ { source = "web/dist", destination = "/" } ]
[component.trigger]
route = "/..."
[component.build]
command = "npm i && npm run build"
workdir = "web"

[[component]]
id = "session-service"
source = "api/session/target/wasm32-wasi/release/session_service.wasm"
allowed_http_hosts = []
[component.trigger]
route = "/api/sessions/..."
[component.build]
command = "cargo build --target wasm32-wasi --release"
workdir = "api/session"

[component.config]
db_url = "mysql://{{db_user}}:{{db_pswd}}@{{db_host}}/{{db_name}}"

[[component]]
id = "message-service"
source = "api/message/target/wasm32-wasi/release/message_service.wasm"
allowed_http_hosts = []
[component.trigger]
route = "/api/messages/..."
[component.build]
command = "cargo build --target wasm32-wasi --release"
workdir = "api/message"

[component.config]
db_url = "mysql://{{db_user}}:{{db_pswd}}@{{db_host}}/{{db_name}}"

[[component]]
id = "chat-service"
source = "api/chat/target/wasm32-wasi/release/chat_service.wasm"
allowed_http_hosts = []
[component.trigger]
route = "/api/chats/..."
[component.build]
command = "cargo build --target wasm32-wasi --release"
workdir = "api/chat"

[component.config]
db_url = "mysql://{{db_user}}:{{db_pswd}}@{{db_host}}/{{db_name}}"

[[component]]
id = "truncator-service"
source = "api/truncator/target/wasm32-wasi/release/truncator_service.wasm"
allowed_http_hosts = []
[component.trigger]
route = "/api/truncator/..."
[component.build]
command = "cargo build --target wasm32-wasi --release"
workdir = "api/truncator"

[component.config]
db_url = "mysql://{{db_user}}:{{db_pswd}}@{{db_host}}/{{db_name}}"
db_name = "{{db_name}}"

[[component]]
id = "user-service"
source = "api/user/target/wasm32-wasi/release/user_service.wasm"
allowed_http_hosts = []
environment = { REDIS_ADDRESS = "redis://127.0.0.1:16785", REDIS_CHANNEL = "users-online" }
[component.trigger]
route = "/api/users/..."
[component.build]
command = "cargo build --target wasm32-wasi --release"
workdir = "api/user"

[component.config]
db_url = "mysql://{{db_user}}:{{db_pswd}}@{{db_host}}/{{db_name}}"
